{
  "private": true,
  "name": "@worldsibu/convector-examples",
  "version": "0.0.1",
  "description": "Convector Development Examples",
  "license": "ISC",
  "scripts": {
    "info": "npm-scripts-info",
    "================= Life cycle =================": "==================================",
    "lint": "tslint --fix -c '../../tslint.json' -p './tsconfig.json'",
    "start": "npm-run-all -s docker:start channel:start register:start cc:start",
    "clean": "npm-run-all -s docker:clean register:clean",
    "restart": "npm-run-all -s clean install start",
    "================= Docker =================": "==================================",
    "docker:start": "COMPOSE_PROJECT_NAME=net FABRIC_VERSION=x86_64-1.1.0 THIRDPARTY_VERSION=x86_64-0.4.6 docker-compose -f ./env/docker-compose.yml up -d",
    "postdocker:start": "sleep 5",
    "docker:restart": "npm-run-all -s docker:clean docker:start",
    "docker:clean": "npm-run-all -s docker:stop docker:rm docker:rmi",
    "docker:stop": "docker stop $(docker ps -a -q) || true",
    "docker:rm": "docker rm -f $(docker ps -a | awk '$2~/hyperledger/ {print $1}') $(docker ps -a | awk '{print $15}' | grep \"^dev-peer\") || true",
    "docker:rmi": "docker rmi -f $(docker images | grep \"^dev-peer\" | awk '{print $3}') || true",
    "================= Channel =================": "==================================",
    "channel:start": "npm-run-all -s channel:create channel:join",
    "channel:create": "docker exec peer0.org1.example.com peer channel create -o orderer.example.com:7050 -c mychannel -f /etc/hyperledger/configtx/channel.tx",
    "channel:join": "docker exec peer0.org1.example.com peer channel join -b mychannel.block",
    "================= Users =================": "==================================",
    "register:start": "tsnode ./env/src/register.ts",
    "register:restart": "npm-run-all -s register:clean register:start",
    "register:clean": "rimraf ./env/.hfc-key-store",
    "================= Chaincodes =================": "==================================",
    "cc:start": "npm-run-all -s 'cc:install -- 1'",
    "cc:install": "chaincode-manager --config ./env/chaincode.config.json install tellus",
    "cc:upgrade": "chaincode-manager --config ./env/chaincode.config.json upgrade tellus",
    "cc:invoke": "chaincode-manager --config ./env/chaincode.config.json invoke tellus"
  },
  "devDependencies": {
    "@types/chai": "^4.0.4",
    "@types/mocha": "^2.2.43",
    "@types/node": "^10.3.2",
    "@types/yup": "^0.24.4",
    "commander": "^2.15.1",
    "fabric-ca-client": "^1.1.2",
    "fabric-client": "^1.1.2",
    "npm-run-all": "^4.1.3",
    "npm-scripts-info": "^0.3.7",
    "rimraf": "^2.6.2",
    "ts-node": "^6.0.3",
    "tslint": "^5.9.1",
    "typescript": "2.8.3"
  }
}
